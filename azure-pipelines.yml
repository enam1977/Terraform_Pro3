variables:
  system.debug: true

trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build Stage
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
          - task: PublishPipelineArtifact@1
            displayName: "Publish Terraform Code"
            inputs:
              path: $(system.DefaultWorkingDirectory)/terraform
              artifact: TerraformBuild
  - stage: DownloadArtifact
    displayName: "Download Terraform Artif"
    jobs:
      - job: Build
        displayName: DownloadCode
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: TerraformBuild
              buildVersionToDownload: latest
              downloadPath: $(system.DefaultWorkingDirectory)/terraform

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: "Install Terraform 1.0.5"
            inputs:
              terraformVersion: 1.0.5

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
            displayName: "Terraform : init"
            inputs:
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
              backendServiceArm: enamul01
              backendAzureRmResourceGroupName: "terraform-storage-rg"
              backendAzureRmStorageAccountName: udacitystorage1
              backendAzureRmContainerName: tfstatefiles
              backendAzureRmKey: "dev-terraform.tfstate"

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
            displayName: "Terraform : validate"
            inputs:
              command: validate
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
            displayName: "Terraform : plan"
            inputs:
              command: plan
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
              commandOptions: "-var-file=dev.tfvars"
              environmentServiceNameAzureRM: enamul01

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
            displayName: "Terraform : apply -auto-approve"
            inputs:
              command: apply
              workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
              commandOptions: "-var-file=dev.tfvars -auto-approve"
              environmentServiceNameAzureRM: enamul01
