trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - README.md
    - .gitignore
    - screenshots/

stages:
- stage: Provision
  jobs:
  - job: provision_azure_infrastructure
    displayName: Provision Azure Infrastructure
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - task: DownloadSecureFile@1
      name: tfvardef
      displayName: Download terraform.tfvars
      inputs:
        secureFile: 'terraform.tfvars' 

    # Needed for Terraform VM deployment
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'known_hosts'
        sshPublicKey: $(PUBLIC_KEY)
        sshKeySecureFile: 'terraform-azure'

    - bash: |
        cp $(Agent.TempDirectory)/terraform.tfvars $(System.DefaultWorkingDirectory)/terraform/
      displayName: Copy terraform.tfvars

    - bash: |
        echo Pipeline workspace dir is $(Pipeline.Workspace)
        echo Terraform variable definition file is $(tfvardef.secureFilePath)
        cd $(Agent.TempDirectory)
        pwd
        ls -la
        cat terraform-azure.pub
        cd ~/.ssh/
        pwd
        ls -la
        cat known_hosts
        # $(System.DefaultWorkingDirectory) is equivalent to $(Build.SourcesDirectory)
        cd $(System.DefaultWorkingDirectory)  
        pwd
        ls -la
      displayName: Verify build environment (pre)

    # install Terraform Azure Pipelines Extension by Microsoft DevLabs
    # https://marketplace.visualstudio.com/items?itemName=ms-devlabs.custom-terraform-tasks
- stage: Deploy_terraform
  jobs:
  - job: Deploy_terraform
    displayName: Deploy_terraform
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - task: TerraformInstaller@0
      displayName: 'Install Terraform 1.0.10'
      inputs:
        terraformVersion: "1.0.10"

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
      displayName: 'Terraform : init'
      inputs:
        backendServiceArm: terraformiacdevops1
        backendAzureRmResourceGroupName: 'terraform-storage-rg'
        backendAzureRmStorageAccountName: udacitystorage1
        backendAzureRmContainerName: tfstatefiles
        backendAzureRmKey: 'dev-terraform.tfstate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
      displayName: 'Terraform : validate'
      inputs:
        command: validate
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
      displayName: 'Terraform : plan'
      inputs:
        command: plan
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        commandOptions: '-var-file=dev.tfvars'
        environmentServiceNameAzureRM: terraformiacdevops1
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
      displayName: 'Terraform : apply -auto-approve'
      inputs:
        command: apply
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        commandOptions: '-var-file=dev.tfvars -auto-approve'
        environmentServiceNameAzureRM: terraformiacdevops1